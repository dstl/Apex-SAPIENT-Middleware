# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sapient_msg/bsi_flex_335_v1_0/registration_ack.proto
# Protobuf Python Version: 4.25.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sapient_msg import proto_options_pb2 as sapient__msg_dot_proto__options__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n4sapient_msg/bsi_flex_335_v1_0/registration_ack.proto\x12\x1dsapient_msg.bsi_flex_335_v1_0\x1a\x1fsapient_msg/proto_options.proto\"\x9a\x01\n\x0fRegistrationAck\x12\x1f\n\nacceptance\x18\x01 \x01(\x08\x42\x06\x8a\xb5\x18\x02\x08\x01H\x00\x88\x01\x01\x12 \n\x13\x61\x63k_response_reason\x18\x02 \x01(\tH\x01\x88\x01\x01:\x1d\x8a\xb5\x18\x19\x8a\xb5\x18\x15SensorRegistrationACKB\r\n\x0b_acceptanceB\x16\n\x14_ack_response_reasonB0\n\x16uk.gov.dstl.sapientmsgB\x14RegistrationAckProtoP\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'sapient_msg.bsi_flex_335_v1_0.registration_ack_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\026uk.gov.dstl.sapientmsgB\024RegistrationAckProtoP\001'
  _globals['_REGISTRATIONACK'].fields_by_name['acceptance']._options = None
  _globals['_REGISTRATIONACK'].fields_by_name['acceptance']._serialized_options = b'\212\265\030\002\010\001'
  _globals['_REGISTRATIONACK']._options = None
  _globals['_REGISTRATIONACK']._serialized_options = b'\212\265\030\031\212\265\030\025SensorRegistrationACK'
  _globals['_REGISTRATIONACK']._serialized_start=121
  _globals['_REGISTRATIONACK']._serialized_end=275
# @@protoc_insertion_point(module_scope)
