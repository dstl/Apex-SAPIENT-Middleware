// Dstl (c) Crown Copyright 2024
//
// [START declaration]
syntax = "proto3";
package sapient_msg.bsi_flex_335_v2_0;

import "google/protobuf/timestamp.proto";

import "sapient_msg/bsi_flex_335_v2_0/associated_file.proto";
import "sapient_msg/bsi_flex_335_v2_0/associated_detection.proto";
import "sapient_msg/bsi_flex_335_v2_0/location.proto";
import "sapient_msg/bsi_flex_335_v2_0/range_bearing.proto";
import "sapient_msg/bsi_flex_335_v2_0/velocity.proto";
import "sapient_msg/proto_options.proto";
// [END declaration]

// [START java_declaration]
option java_multiple_files = true;
option java_package = "uk.gov.dstl.sapientmsg.bsiflex335v2";
option java_outer_classname = "DetectionReportProto";
// [END java_declaration]


// [START messages]
message DetectionReport {
    reserved 17, 18, 20, 21; // These values were used in SAPIENT v7, but are not used in the current version
    optional string report_id = 1 [(field_options) = {is_mandatory: true, is_ulid: true}]; // ULID for the message
    optional string object_id = 2 [(field_options) = {is_mandatory: true, is_ulid: true}]; // ULID for the object detected in the environment
    optional string task_id = 3 [(field_options) = {is_ulid: true}]; // ULID of the task the ASM is currently performing
    optional string state = 4; // Whether a special case is in effect (e.g. object lost)
    oneof location_oneof {
        option (oneof_options) = {is_mandatory: true};
        RangeBearing range_bearing = 5; // Location of object being detected using an range-bearing coordinate system
        Location location = 6; // Location of object being detected using an 'x-y-z' coordinate system
    }
    optional float detection_confidence = 7; // The confidence that the detection is present as a percentage (0-1)
    repeated TrackObjectInfo track_info = 8; // Additional information about the track as defined in the ASM's registration message
    optional PredictedLocation prediction_location = 9; // Location where the object is predicted to be at a future time
    repeated TrackObjectInfo object_info = 10; // Additional information about the detected object as defined in the ASM's registration message
    repeated DetectionReportClassification classification = 11; // Classification information about the detected object
    repeated Behaviour behaviour = 12; // Behavioural information about the detected object
    repeated AssociatedFile associated_file = 13; // URLs to any additional files relating to the object which hosted on the network
    repeated Signal signal = 14; // RF signal information about the detected object
    repeated AssociatedDetection associated_detection = 15; // Other SAPIENT detections associated with this detection
    repeated DerivedDetection derived_detection = 16; // Other SAPIENT detections dervied from this detection
    oneof velocity_oneof {
//        RYPVelocity ryp_velocity = 17; // Velocity of object relative to sensor location and sensor pointing direction
//        GHCVelocity ghc_velocity = 18; // Velocity of object in global coordinates in the style of Air Traffic Management
		ENUVelocity enu_velocity = 19; // Velocity of object as a vector in global cartesian coordinates
//		SHPVelocity shp_velocity = 20; // Velocity of object as a vector in global spherical coordinates
//		RAEVelocity rae_velocity = 21; // Velocity of object relative to sensor location and ground plane
    }
    optional string colour = 22; // Colour of the object being reported
    optional string id = 23; // ID of the object being reported (e.g. the tail number of aircraft)

    message PredictedLocation {
        oneof predicted_location_oneof {
            RangeBearing range_bearing = 1; // Predicted location of object being detected using an range-bearing coordinate system
            Location location = 2; // Predicted location of object being detected using an 'x-y-z' coordinate system
        }
        optional google.protobuf.Timestamp predicted_timestamp = 3; // The timestamp of when the detected object will be at the predicted location
    }

    message TrackObjectInfo {
        optional string type = 1 [(field_options) = {is_mandatory: true}]; // The type of object_info being reported (e.g. colour)
        optional string value = 2 [(field_options) = {is_mandatory: true}]; // The value of the object_info being reported (e.g. red)
        optional float error = 3; // Any error associated with the object_info
    }

    message DetectionReportClassification {
        optional string type = 1 [(field_options) = {is_mandatory: true}]; // Classification of the detected object being reported
        optional float confidence = 2; // Confidence (0-1) that this is the correct classification of the detected object
        repeated SubClass sub_class = 3; // Any sub-classifications of the detected object
    }

    message SubClass {
        optional string type = 1 [(field_options) = {is_mandatory: true}]; // Classification of the detected object being reported
        optional float confidence = 2; // Confidence (0-1) that this is the correct classification of the detected object
        optional int32 level = 3 [(field_options) = {is_mandatory: true}]; // The level of sub-classification (top level is 0, the first sub-class is 1, etc.)
        repeated SubClass sub_class = 4; // Any sub-classifications of the detected object
    }

    message Behaviour {
        optional string type = 1 [(field_options) = {is_mandatory: true}]; // Behviouar of the detected object being reported
        optional float confidence = 2; // Confidence (0-1) that this is the correct behvaiour of the detected object
    }

    message Signal {
        optional float amplitude = 1 [(field_options) = {is_mandatory: true}]; // Peak amplitude of the signal being reported
        optional float start_frequency = 2; // Lowest frequency of the band being reported
        optional float centre_frequency = 3 [(field_options) = {is_mandatory: true}]; // Centre frequency of the band being reported
        optional float stop_frequency = 4; // Highest frequency of the band being reported
        optional float pulse_duration = 5; // Pulse duration of the signal being reported
    }

    message DerivedDetection {
        optional google.protobuf.Timestamp timestamp = 1; // UTC timestamp the message was sent
        optional string node_id = 2 [(field_options) = {is_mandatory: true, is_uuid: true}]; // UUID for the node where the assoicated detection has originiated
        optional string object_id = 3 [(field_options) = {is_mandatory: true, is_ulid: true}]; // ULID for the object detected in the environment
    }
}
// [END messages]
